version: "3.8"

services:
  postgresql:
    image: postgres:latest
    container_name: multi-module-postgresql
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin_password
      POSTGRES_DB: example
    volumes:
      - ./docker-volumes/postgresql/:/var/lib/postgresql/data
    ports:
      - "9000:5432"
  kafka:
    image: 'bitnami/kafka:3.3.1'
    container_name: multi-module-kafka
    restart: always
    privileged: true
    ports:
      - "2181:2181"
      - "19092:19092"
#      - "9093:9093"
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:19092,CONTROLLER://:2181
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:19092
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@127.0.0.1:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
#      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
#      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
#      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
#      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    volumes:
      - ./docker-volumes/kafka:/bitnami/kafka
#  kafka-ui:
#    container_name: multi-module-kafka-ui
#    image: 'provectuslabs/kafka-ui:latest'
#    ports:
#      - "9090:8080"
#    environment:
#      - KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS=kafka:9092
#      - KAFKA_CLUSTERS_0_NAME=kafka
